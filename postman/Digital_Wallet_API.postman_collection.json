{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6",
		"name": "Digital Wallet API",
		"description": "A comprehensive API collection for the Digital Wallet backend system",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"description": "Endpoints for user authentication and authorization",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// Only run the following tests if the status code is 201",
									"if (pm.response.code === 201) {",
									"    pm.test(\"Response has required fields\", function () {",
									"        const response = pm.response.json();",
									"        pm.expect(response.success).to.be.true;",
									"        pm.expect(response.data.user).to.have.property('id');",
									"        pm.expect(response.data.user).to.have.property('email');",
									"        pm.expect(response.data).to.have.property('token');",
									"    });",
									"",
									"    // Store token for future requests",
									"    if (pm.response.json().data.token) {",
									"        pm.environment.set('jwt_token', pm.response.json().data.token);",
									"    }",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"user@example.com\",\"password\":\"password123\",\"firstName\":\"John\",\"lastName\":\"Doe\"}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "register"]
						},
						"description": "Register a new user account"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"user@example.com\",\"password\":\"password123\",\"firstName\":\"John\",\"lastName\":\"Doe\"}"
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\"success\":true,\"message\":\"User registered successfully\",\"data\":{\"user\":{\"id\":\"user_id\",\"email\":\"user@example.com\",\"firstName\":\"John\",\"lastName\":\"Doe\"},\"token\":\"jwt_token\"}}"
						},
						{
							"name": "Invalid Email Format",
							"originalRequest": {
								"method": "POST",
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"invalid-email\",\"password\":\"password123\",\"firstName\":\"John\",\"lastName\":\"Doe\"}"
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\"success\":false,\"message\":\"Invalid email format\",\"error\":{\"code\":\"INVALID_EMAIL\",\"details\":\"Please provide a valid email address\"}}"
						},
						{
							"name": "Email Already Exists",
							"originalRequest": {
								"method": "POST",
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"existing@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\"\n}"
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n    \"success\": false,\n    \"message\": \"Email already registered\",\n    \"error\": {\n        \"code\": \"EMAIL_EXISTS\",\n        \"details\": \"A user with this email already exists\"\n    }\n}"
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has required fields\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.have.property('token');",
									"    pm.expect(response.data.user).to.have.property('id');",
									"});",
									"",
									"// Store token for future requests",
									"if (pm.response.json().data.token) {",
									"    pm.environment.set('jwt_token', pm.response.json().data.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "login"]
						},
						"description": "Login to get JWT token"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"password123\"\n}"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n    \"success\": true,\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"token\": \"jwt_token\",\n        \"user\": {\n            \"id\": \"user_id\",\n            \"email\": \"user@example.com\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Doe\"\n        }\n    }\n}"
						},
						{
							"name": "Invalid Credentials",
							"originalRequest": {
								"method": "POST",
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"wrongpassword\"\n}"
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n    \"success\": false,\n    \"message\": \"Invalid credentials\",\n    \"error\": {\n        \"code\": \"INVALID_CREDENTIALS\",\n        \"details\": \"Email or password is incorrect\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"password123\"\n}"
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Retry-After",
									"value": "60"
								}
							],
							"body": "{\n    \"success\": false,\n    \"message\": \"Too many requests\",\n    \"error\": {\n        \"code\": \"RATE_LIMIT_EXCEEDED\",\n        \"details\": \"Please try again after 60 seconds\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Current User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/me",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "me"]
						},
						"description": "Get current user's profile information"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"user\": {\n            \"id\": \"user_id\",\n            \"email\": \"user@example.com\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Doe\",\n            \"lastLogin\": \"2024-03-20T10:00:00Z\"\n        }\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Wallet Operations",
			"description": "Endpoints for wallet management and transactions",
			"item": [
				{
					"name": "Get Wallet Balance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/wallet/balance",
							"host": ["{{base_url}}"],
							"path": ["api", "wallet", "balance"]
						},
						"description": "Get current wallet balance in all currencies"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"balances\": {\n            \"INR\": 1000.50,\n            \"USD\": 12.05\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Deposit Money",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"amount\":1000.50,\"currency\":\"INR\",\"description\":\"Initial deposit\"}"
						},
						"url": {
							"raw": "{{base_url}}/api/wallet/deposit",
							"host": ["{{base_url}}"],
							"path": ["api", "wallet", "deposit"]
						},
						"description": "Deposit money into wallet"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"body": {
									"mode": "raw",
									"raw": "{\"amount\":1000.50,\"currency\":\"INR\",\"description\":\"Initial deposit\"}"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\"success\":true,\"message\":\"Deposit successful\",\"data\":{\"transaction\":{\"id\":\"transaction_id\",\"amount\":1000.50,\"currency\":\"INR\",\"type\":\"deposit\",\"status\":\"completed\",\"description\":\"Initial deposit\",\"timestamp\":\"2024-03-20T10:00:00Z\"},\"balance\":{\"INR\":1000.50,\"USD\":12.05}}}"
						}
					]
				},
				{
					"name": "Withdraw Money",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 500.25,\n    \"currency\": \"INR\",\n    \"description\": \"ATM withdrawal\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/wallet/withdraw",
							"host": ["{{base_url}}"],
							"path": ["api", "wallet", "withdraw"]
						},
						"description": "Withdraw money from wallet"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 500.25,\n    \"currency\": \"INR\",\n    \"description\": \"ATM withdrawal\"\n}"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n    \"success\": true,\n    \"message\": \"Withdrawal successful\",\n    \"data\": {\n        \"transaction\": {\n            \"id\": \"transaction_id\",\n            \"amount\": 500.25,\n            \"currency\": \"INR\",\n            \"type\": \"withdrawal\",\n            \"status\": \"completed\",\n            \"description\": \"ATM withdrawal\",\n            \"timestamp\": \"2024-03-20T10:00:00Z\"\n        },\n        \"balance\": {\n            \"INR\": 500.25,\n            \"USD\": 6.05\n        }\n    }\n}"
						},
						{
							"name": "Insufficient Balance",
							"originalRequest": {
								"method": "POST",
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 10000.00,\n    \"currency\": \"INR\",\n    \"description\": \"Large withdrawal\"\n}"
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n    \"success\": false,\n    \"message\": \"Insufficient balance\",\n    \"error\": {\n        \"code\": \"INSUFFICIENT_BALANCE\",\n        \"details\": \"Available balance: 500.25 INR\"\n    }\n}"
						}
					]
				},
				{
					"name": "Transfer Money",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 200.75,\n    \"currency\": \"INR\",\n    \"toUserId\": \"recipient_user_id\",\n    \"description\": \"Payment for services\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/wallet/transfer",
							"host": ["{{base_url}}"],
							"path": ["api", "wallet", "transfer"]
						},
						"description": "Transfer money to another user"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 200.75,\n    \"currency\": \"INR\",\n    \"toUserId\": \"recipient_user_id\",\n    \"description\": \"Payment for services\"\n}"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n    \"success\": true,\n    \"message\": \"Transfer successful\",\n    \"data\": {\n        \"transaction\": {\n            \"id\": \"transaction_id\",\n            \"amount\": 200.75,\n            \"currency\": \"INR\",\n            \"type\": \"transfer\",\n            \"status\": \"completed\",\n            \"description\": \"Payment for services\",\n            \"timestamp\": \"2024-03-20T10:00:00Z\",\n            \"fromUserId\": \"sender_user_id\",\n            \"toUserId\": \"recipient_user_id\"\n        },\n        \"balance\": {\n            \"INR\": 299.50,\n            \"USD\": 3.60\n        }\n    }\n}"
						},
						{
							"name": "Invalid Recipient",
							"originalRequest": {
								"method": "POST",
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 200.75,\n    \"currency\": \"INR\",\n    \"toUserId\": \"invalid_user_id\",\n    \"description\": \"Payment for services\"\n}"
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n    \"success\": false,\n    \"message\": \"Recipient not found\",\n    \"error\": {\n        \"code\": \"USER_NOT_FOUND\",\n        \"details\": \"No user found with ID: invalid_user_id\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Transaction History",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/wallet/history?page=1&limit=10",
							"host": ["{{base_url}}"],
							"path": ["api", "wallet", "history"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get transaction history with pagination"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"transactions\": [\n            {\n                \"id\": \"transaction_id_1\",\n                \"amount\": 1000.50,\n                \"currency\": \"INR\",\n                \"type\": \"deposit\",\n                \"status\": \"completed\",\n                \"description\": \"Initial deposit\",\n                \"timestamp\": \"2024-03-20T10:00:00Z\"\n            },\n            {\n                \"id\": \"transaction_id_2\",\n                \"amount\": 500.25,\n                \"currency\": \"INR\",\n                \"type\": \"withdrawal\",\n                \"status\": \"completed\",\n                \"description\": \"ATM withdrawal\",\n                \"timestamp\": \"2024-03-20T09:30:00Z\"\n            }\n        ],\n        \"pagination\": {\n            \"page\": 1,\n            \"limit\": 10,\n            \"total\": 2,\n            \"pages\": 1\n        }\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Admin Operations",
			"description": "Endpoints for administrative operations",
			"item": [
				{
					"name": "Get Flagged Transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/flagged-transactions",
							"host": ["{{base_url}}"],
							"path": ["api", "admin", "flagged-transactions"]
						},
						"description": "Get list of flagged transactions"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"transactions\": [\n            {\n                \"id\": \"transaction_id_1\",\n                \"amount\": 9999.99,\n                \"currency\": \"INR\",\n                \"type\": \"transfer\",\n                \"status\": \"flagged\",\n                \"description\": \"Suspicious transfer\",\n                \"timestamp\": \"2024-03-20T10:00:00Z\",\n                \"flagReasons\": [\n                    \"Suspicious amount pattern\",\n                    \"Large transaction amount\"\n                ],\n                \"fromUserId\": \"user_id_1\",\n                \"toUserId\": \"user_id_2\"\n            }\n        ],\n        \"pagination\": {\n            \"page\": 1,\n            \"limit\": 10,\n            \"total\": 1,\n            \"pages\": 1\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Top Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/top-users?by=balance",
							"host": ["{{base_url}}"],
							"path": ["api", "admin", "top-users"],
							"query": [
								{
									"key": "by",
									"value": "balance"
								}
							]
						},
						"description": "Get top users by balance or transaction volume"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"users\": [\n            {\n                \"id\": \"user_id_1\",\n                \"email\": \"user1@example.com\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Doe\",\n                \"balance\": {\n                    \"INR\": 50000.00,\n                    \"USD\": 600.00\n                },\n                \"transactionVolume\": 100000.00\n            },\n            {\n                \"id\": \"user_id_2\",\n                \"email\": \"user2@example.com\",\n                \"firstName\": \"Jane\",\n                \"lastName\": \"Smith\",\n                \"balance\": {\n                    \"INR\": 25000.00,\n                    \"USD\": 300.00\n                },\n                \"transactionVolume\": 75000.00\n            }\n        ],\n        \"pagination\": {\n            \"page\": 1,\n            \"limit\": 10,\n            \"total\": 2,\n            \"pages\": 1\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Transaction Summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/transactions/summary",
							"host": ["{{base_url}}"],
							"path": ["api", "admin", "transactions", "summary"]
						},
						"description": "Get transaction summary statistics"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"summary\": {\n            \"totalTransactions\": 1000,\n            \"totalVolume\": {\n                \"INR\": 5000000.00,\n                \"USD\": 60000.00\n            },\n            \"transactionTypes\": {\n                \"deposit\": 400,\n                \"withdrawal\": 300,\n                \"transfer\": 300\n            },\n            \"flaggedTransactions\": 10,\n            \"averageTransactionAmount\": {\n                \"INR\": 5000.00,\n                \"USD\": 60.00\n            },\n            \"period\": {\n                \"start\": \"2024-03-01T00:00:00Z\",\n                \"end\": \"2024-03-20T23:59:59Z\"\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Soft Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/users/{{user_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "admin", "users", "{{user_id}}"]
						},
						"description": "Soft delete a user account"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "DELETE"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n    \"success\": true,\n    \"message\": \"User soft deleted successfully\",\n    \"data\": {\n        \"userId\": \"user_id\"\n    }\n}"
						}
					]
				},
				{
					"name": "Soft Delete Transaction",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/transactions/{{transaction_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "admin", "transactions", "{{transaction_id}}"]
						},
						"description": "Soft delete a transaction"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "DELETE"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n    \"success\": true,\n    \"message\": \"Transaction soft deleted successfully\",\n    \"data\": {\n        \"transactionId\": \"transaction_id\"\n    }\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set common headers",
					"pm.request.headers.add({",
					"    key: 'Accept',",
					"    value: 'application/json'",
					"});",
					"",
					"// Add request ID for tracking",
					"pm.request.headers.add({",
					"    key: 'X-Request-ID',",
					"    value: pm.variables.replaceIn('{{$guid}}')",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Common test for all requests",
					"pm.test(\"Response time is acceptable\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(1000);",
					"});",
					"",
					"pm.test(\"Response has correct content type\", function () {",
					"    pm.response.to.have.header('Content-Type', 'application/json');",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "your_jwt_token_here",
			"type": "string"
		},
		{
			"key": "api_version",
			"value": "v1",
			"type": "string"
		},
		{
			"key": "default_currency",
			"value": "INR",
			"type": "string"
		}
	]
} 